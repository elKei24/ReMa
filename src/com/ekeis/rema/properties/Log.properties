#
# Copyright (c) 2016 by Elias Keis. All rights reserved.
#

exception.syntax=syntax error
exception.syntax.details=syntax error: %s
exception.syntax.missing_line_number=line number missing at '%s'
exception.syntax.missing_command=command missing in line %d
exception.syntax.unknown_command=unknown command '%1$S' at line %2$d
exception.syntax.line_number_double=line number %d is used more than one time
exception.syntax.missing_parameters=Command '%1$S' in line %2$d needs more parameters
exception.syntax.parameter_no_number=Parameter in line %d is not a integer
exception.runtime=Runtime exception in line %d
exception.runtime.details=Runtime exception in line %1$d: %2$s
exception.runtime.register_not_found=Register %d does not exist
exception.syntax.line_missing=Line %d is missing
exception.runtime.line_not_found=this line does not exist
exception.internal=Internal error
exception.internal.details=Internal error: %s
command.format=Command %1$d: %2$s
command.arithmetic.add=added %d (from R%d) to Accu
command.arithmetic.sub=subtracted %d (from R%d) from Accu
command.arithmetic.mult=multiplied Accu by %d (from R%d)
command.arithmetic.div=accu divided by %d (from R%d)
command.transport.dload=loaded %d directly
command.transport.load=loaded %d from R%d
command.transport.store=stored %d in R%d
command.end=<span style="color:red;">finished</span>
command.jump.condition_check_failed=skipped jump as conditions are not satisfied (Accu is %d)
command.jump.conditions_satisfied=jumped to line %d (Accu is %d)
command.bitvise.not=logical negation of Accu
command.bitvise.and=logical AND operation with %s (from R%d)
command.bitvise.or=logical OR operation with %s (from R%d)
command.bitvise.xor=logical XOR operation with %s (from R%d)
command.bitvise.asl=arithmetic left shift
command.bitvise.asr=arithmetic right shift
command.bitvise.lsr=logic right shift